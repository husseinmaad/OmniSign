{
  "_args": [
    [
      {
        "raw": "react-native-document-picker@git+https://github.com/devshackio/react-native-document-picker.git",
        "scope": null,
        "escapedName": "react-native-document-picker",
        "name": "react-native-document-picker",
        "rawSpec": "git+https://github.com/devshackio/react-native-document-picker.git",
        "spec": "git+https://github.com/devshackio/react-native-document-picker.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:devshackio/react-native-document-picker.git",
          "sshUrl": "git+ssh://git@github.com/devshackio/react-native-document-picker.git",
          "httpsUrl": "git+https://github.com/devshackio/react-native-document-picker.git",
          "gitUrl": "git://github.com/devshackio/react-native-document-picker.git",
          "shortcut": "github:devshackio/react-native-document-picker",
          "directUrl": "https://raw.githubusercontent.com/devshackio/react-native-document-picker/master/package.json"
        }
      },
      "/Users/hussain/Desktop/omnisign"
    ]
  ],
  "_from": "git+https://github.com/devshackio/react-native-document-picker.git",
  "_id": "react-native-document-picker@1.0.2",
  "_inCache": true,
  "_location": "/react-native-document-picker",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-document-picker@git+https://github.com/devshackio/react-native-document-picker.git",
    "scope": null,
    "escapedName": "react-native-document-picker",
    "name": "react-native-document-picker",
    "rawSpec": "git+https://github.com/devshackio/react-native-document-picker.git",
    "spec": "git+https://github.com/devshackio/react-native-document-picker.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:devshackio/react-native-document-picker.git",
      "sshUrl": "git+ssh://git@github.com/devshackio/react-native-document-picker.git",
      "httpsUrl": "git+https://github.com/devshackio/react-native-document-picker.git",
      "gitUrl": "git://github.com/devshackio/react-native-document-picker.git",
      "shortcut": "github:devshackio/react-native-document-picker",
      "directUrl": "https://raw.githubusercontent.com/devshackio/react-native-document-picker/master/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git+https://github.com/devshackio/react-native-document-picker.git#0b253741cd334df5c4e4a9d7ae9ac89fdd71a866",
  "_shasum": "4325ea336089e93c5ce47d536c5a07d656dbfb3e",
  "_shrinkwrap": null,
  "_spec": "react-native-document-picker@git+https://github.com/devshackio/react-native-document-picker.git",
  "_where": "/Users/hussain/Desktop/omnisign",
  "author": {
    "name": "Elyx0",
    "email": "elyx00@gmail.com",
    "url": "http://elyx0.ghost.io"
  },
  "bugs": {
    "url": "https://github.com/Elyx0/react-native-document-picker/issues"
  },
  "dependencies": {},
  "description": "A react native interface to access Documents from dropbox google drive, iCloud",
  "devDependencies": {
    "react-native": "^0.28.0"
  },
  "gitHead": "0b253741cd334df5c4e4a9d7ae9ac89fdd71a866",
  "homepage": "https://github.com/Elyx0/react-native-document-picker#readme",
  "keywords": [
    "document",
    "picker",
    "uidocumentmenuviewcontroller",
    "react-native",
    "dropbox",
    "google-drive",
    "icloud"
  ],
  "license": "ISC",
  "main": "index.js",
  "name": "react-native-document-picker",
  "optionalDependencies": {},
  "readme": "# react-native-document-picker\n\nA React Native wrapper for Apple's ``UIDocumentMenuViewController``\n\n### Installation\n\n```bash\nnpm i --save react-native-document-picker\n```\n\n### Easy way: With [rnpm](https://github.com/rnpm/rnpm)\n\n`$ react-native link`\n\n### Option: Manually\n\n1. Run `npm install react-native-document-picker --save`\n2. Open your project in XCode, right click on `Libraries` and click `Add\n   Files to \"Your Project Name\"` [(Screenshot)](http://url.brentvatne.ca/jQp8) then [(Screenshot)](http://url.brentvatne.ca/1gqUD).\n3. Add `libRNDocumentPicker.a` to `Build Phases -> Link Binary With Libraries`\n   [(Screenshot)](http://url.brentvatne.ca/17Xfe).\n\n\n\n\n\n## Example\n```javascript\nconst DocumentPicker = require('react-native').NativeModules.RNDocumentPicker;\n\nDocumentPicker.show({\n      filetype: ['public.image'],\n    },(error,url) => {\n      alert(url);\n    });\n\n```\n\n### Note\nThe full list of UTI is available here:\n[(https://developer.apple.com/library/ios/documentation/Miscellaneous/Reference/UTIRef/Articles/System-DeclaredUniformTypeIdentifiers.html)](https://developer.apple.com/library/ios/documentation/Miscellaneous/Reference/UTIRef/Articles/System-DeclaredUniformTypeIdentifiers.html\n)]\n\n## Here is how it looks:\n![screenshot](http://i.stack.imgur.com/dv0iQ.png)\n\n\n## How to send it back ?\n\nI recommend using [https://github.com/johanneslumpe/react-native-fs](https://github.com/johanneslumpe/react-native-fs)\nI had to modify [Uploader.m](https://gist.github.com/Elyx0/5dc53bef294b42c847f1baea7cc5e911) so it would use `NSFileCoordinator` with `NSFileCoordinatorReadingForUploading` option.\n\nI added a check for file length that would be thrown into RNFS catch block.\n```obj-c\nif ([fileData length] == 0) {\n    NSError *errorUp = [NSError errorWithDomain:@\"com.whatever.yourapp\" code:77 userInfo:[NSDictionary dictionaryWithObject:@\"empty\" forKey:NSLocalizedDescriptionKey]];\n    _params.errorCallback(errorUp);\n    return;\n}\n```\n\n\n```javascript\nlet url = \"file://whatever/com.bla.bla/file.ext\"; //The url you received from the DocumentPicker\n\n// I STRONGLY RECOMMEND ADDING A SMALL SETTIMEOUT before uploading the url you just got.\nconst split = url.split('/');\nconst name = split.pop();\nconst inbox = split.pop();\nconst realPath = `${RNFS.TemporaryDirectoryPath}${inbox}/${name}`;\n\nconst uploadBegin = (response) => {\n  const jobId = response.jobId;\n  console.log('UPLOAD HAS BEGUN! JobId: ' + jobId);\n};\n\nconst uploadProgress = (response) => {\n  const percentage = Math.floor((response.totalBytesSent/response.totalBytesExpectedToSend) * 100);\n  console.log('UPLOAD IS ' + percentage + '% DONE!');\n};\n\nRNFS.uploadFiles({\n   toUrl: uploadUrl,\n   files: [{\n      name,\n      filename:name,\n      filepath: realPath,\n    }],\n   method: 'POST',\n   headers: {\n      'Accept': 'application/json',\n   },\n   begin: uploadBegin,\n   beginCallback: uploadBegin, // Don't ask me, only way I made it work as of 1.5.1\n   progressCallback: uploadProgress,\n   progress: uploadProgress\n   })\n   .then((response) => {\n     console.log(response,\"<<< Response\");\n     if (response.statusCode == 200) { //You might not be getting a statusCode at all. Check\n        console.log('FILES UPLOADED!');\n      } else {\n        console.log('SERVER ERROR');\n       }\n     })\n     .catch((err) => {\n       if (err.description) {\n         switch (err.description) {\n           case \"cancelled\":\n             console.log(\"Upload cancelled\");\n             break;\n           case \"empty\"\n             console.log(\"Empty file\");\n           default:\n            //Unknown\n         }\n       } else {\n        //Weird\n       }\n       console.log(err);\n    });\n```\n## Reminder\n\nYou need to enable iCloud Documents to access iCloud\n![screen](https://313e5987718b346aaf83-f5e825270f29a84f7881423410384342.ssl.cf1.rackcdn.com/1411920674-enable-icloud-drive.png)\n\n\n## Halp wanted: Improvements\n\n- Fix Xcode warning about constraints\n- support options for the [UIDocumentMenuViewController](https://developer.apple.com/library/ios/documentation/FileManagement/Conceptual/DocumentPickerProgrammingGuide/AccessingDocuments/AccessingDocuments.html#//apple_ref/doc/uid/TP40014451-CH2-SW5)\n- Handle Upload by itself ?\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/Elyx0/react-native-document-picker.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.0.2"
}
